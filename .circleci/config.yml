version: 2.1
orbs:
  slack: circleci/slack@3.4.2
workflows:
  version: 2
  build-then-test:
    jobs:
      - compile_driver
      - test_driver:
          requires:
            - compile_driver
      - test_conversion_script

jobs:
  compile_driver:
    docker:
      - image: cimg/openjdk:11.0.16
    steps:
      - checkout
      - run: mvn clean install -DskipTests
      - slack/status

  test_driver:
    parallelism: 2 # parallel containers to split the tests among
    docker:
      - image: cimg/openjdk:11.0.16
    steps:
      - checkout
      - run: |
          mvn \
          -Dtest=$(for file in $(circleci tests glob "src/test/**/**.java" \
          | circleci tests split --split-by=timings); \
          do basename $file \
          | sed -e "s/.java/,/"; \
          done | tr -d '\r\n') \
          -e test
      - store_test_results: # We use this timing data to optimize the future runs
          path: target/surefire-reports
      - slack/status

  test_conversion_script:
    machine:
      image: ubuntu-2204:2022.04.1
    steps:
      - checkout
      - run:
          name: Setup
          command: |
            export DEBIAN_FRONTEND=noninteractive
            sudo apt update
            # install dependencies
            sudo apt install -y wget unzip
            scripts/install-dependencies.sh
      - run:
          name: Download sample data set
          command: |
            wget -q https://ldbcouncil.org/ldbc_snb_datagen_spark/social-network-sf0.003-bi-parquet.zip
            unzip -q social-network-sf0.003-bi-parquet.zip
      - run:
          name: Convert sample data set
          command: |
            export LDBC_SNB_DATA_ROOT_DIRECTORY=$(pwd)/social-network-sf0.003-bi-parquet/graphs/parquet/raw/
            scripts/convert.sh
      - run:
          name: Test paramgen on the small data set
          command: |
            export LDBC_SNB_DATA_ROOT_DIRECTORY=$(pwd)/social-network-sf0.003-bi-parquet/
            cd paramgen
            scripts/get-sample-factors.sh
            scripts/paramgen.sh
      - run:
          name: Download the SF1 data set
          command: |
            curl --silent --fail https://pub-383410a98aef4cb686f0c7601eddd25f.r2.dev/bi-pre-audit/factors/factors-sf1.tar.zst | tar -xv --use-compress-program=unzstd
            curl --silent --fail https://pub-383410a98aef4cb686f0c7601eddd25f.r2.dev/bi-raw/bi-sf1-raw.tar.zst | tar -xv --use-compress-program=unzstd
      - run:
          name: Convert the SF1 data set
          command: |
            export LDBC_SNB_DATA_ROOT_DIRECTORY=$(pwd)/bi-sf1-raw/graphs/parquet/raw/

            scripts/convert.sh
      - run:
          name: Test paramgen on SF1 data set
          command: |
            export FACTORS_DIRECTORY=$(pwd)/factors-sf1/parquet/raw/composite-merged-fk/

            export LDBC_SNB_DATA_ROOT_DIRECTORY=$(pwd)/bi-sf1-raw
            cd paramgen
            # copy factors under the scratch directory
            rm -rf scratch/factors
            mkdir -p scratch/factors
            cp -r ${FACTORS_DIRECTORY}/* scratch/factors
            scripts/paramgen.sh
      - slack/status
